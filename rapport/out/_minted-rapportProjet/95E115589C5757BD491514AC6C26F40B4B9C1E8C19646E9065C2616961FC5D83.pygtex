\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kt}{void} \PYG{n+nf}{esp\PYGZus{}mesh\PYGZus{}rx}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{arg}\PYG{p}{)\PYGZob{}}
    \PYG{n}{esp\PYGZus{}err\PYGZus{}t} \PYG{n}{err}\PYG{p}{;}
    \PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{rx\PYGZus{}buf}\PYG{p}{[}\PYG{n}{RX\PYGZus{}BUF\PYGZus{}SIZE}\PYG{p}{]}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{l+m+mi}{0}\PYG{p}{,\PYGZcb{};} \PYG{c+c1}{//receive buffer}
    \PYG{n}{mesh\PYGZus{}addr\PYGZus{}t} \PYG{n}{from}\PYG{p}{;} \PYG{c+c1}{//src addr}
    \PYG{k+kt}{int} \PYG{n}{flag} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}

    \PYG{c+cm}{/* mesh data */}
    \PYG{n}{mesh\PYGZus{}data\PYGZus{}t} \PYG{n}{data}\PYG{p}{;}
    \PYG{n}{data}\PYG{p}{.}\PYG{n}{data} \PYG{o}{=} \PYG{n}{rx\PYGZus{}buf}\PYG{p}{;}
    \PYG{n}{data}\PYG{p}{.}\PYG{n}{size} \PYG{o}{=} \PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{rx\PYGZus{}buf}\PYG{p}{);}

    \PYG{k}{while}\PYG{p}{()\PYGZob{}}
        \PYG{c+cm}{/* recv}
\PYG{c+cm}{         *  \PYGZhy{} from addr}
\PYG{c+cm}{         *  \PYGZhy{} data}
\PYG{c+cm}{         *  \PYGZhy{} timeout in ms (0:no wait, portMAX\PYGZus{}DELAY:wait forever)}
\PYG{c+cm}{         *  \PYGZhy{} flag}
\PYG{c+cm}{         *  \PYGZhy{} options}
\PYG{c+cm}{         *  \PYGZhy{} number of options}
\PYG{c+cm}{         **/}
        \PYG{n}{err} \PYG{o}{=} \PYG{n}{esp\PYGZus{}mesh\PYGZus{}recv}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{from}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{data}\PYG{p}{,} \PYG{l+m+mi}{5000}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{flag}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{err} \PYG{o}{==} \PYG{n}{ESP\PYGZus{}OK}\PYG{p}{)\PYGZob{}}
            \PYG{n}{printArray}\PYG{p}{(}\PYG{n}{rx\PYGZus{}buf}\PYG{p}{,} \PYG{n}{RX\PYGZus{}BUF\PYGZus{}SIZE}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{c+cm}{/* delete the task */}
    \PYG{n}{vTaskDelete}\PYG{p}{(}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{n+nf}{esp\PYGZus{}mesh\PYGZus{}tx}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{arg}\PYG{p}{)\PYGZob{}}
    \PYG{n}{esp\PYGZus{}err\PYGZus{}t} \PYG{n}{err}\PYG{p}{;}

    \PYG{k}{static} \PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{tx\PYGZus{}buf}\PYG{p}{[}\PYG{n}{TX\PYGZus{}BUF\PYGZus{}SIZE}\PYG{p}{]}\PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{,} \PYG{l+m+mi}{238}\PYG{p}{\PYGZcb{};}

    \PYG{c+cm}{/* mesh data */}
    \PYG{n}{mesh\PYGZus{}data\PYGZus{}t} \PYG{n}{mesh\PYGZus{}data}\PYG{p}{;}
    \PYG{n}{mesh\PYGZus{}data}\PYG{p}{.}\PYG{n}{data} \PYG{o}{=} \PYG{n}{tx\PYGZus{}buf}\PYG{p}{;}
    \PYG{n}{mesh\PYGZus{}data}\PYG{p}{.}\PYG{n}{size} \PYG{o}{=} \PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{tx\PYGZus{}buf}\PYG{p}{);}
    \PYG{n}{mesh\PYGZus{}data}\PYG{p}{.}\PYG{n}{proto} \PYG{o}{=} \PYG{n}{MESH\PYGZus{}PROTO\PYGZus{}BIN}\PYG{p}{;}

    \PYG{k}{while}\PYG{p}{()\PYGZob{}}
        \PYG{c+cm}{/* send:}
\PYG{c+cm}{         *  \PYGZhy{} dest addr}
\PYG{c+cm}{         *  \PYGZhy{} data: NULL for the root}
\PYG{c+cm}{         *  \PYGZhy{} flag}
\PYG{c+cm}{         *  \PYGZhy{} options}
\PYG{c+cm}{         *  \PYGZhy{} number of options}
\PYG{c+cm}{         **/}
        \PYG{n}{err} \PYG{o}{=} \PYG{n}{esp\PYGZus{}mesh\PYGZus{}send}\PYG{p}{(}\PYG{n+nb}{NULL}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{mesh\PYGZus{}data}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{c+cm}{/* delete the task */}
    \PYG{n}{vTaskDelete}\PYG{p}{(}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{k+kt}{void} \PYG{n+nf}{esp\PYGZus{}mesh\PYGZus{}comm\PYGZus{}p2p\PYGZus{}start}\PYG{p}{()\PYGZob{}}
    \PYG{k}{static} \PYG{k+kt}{bool} \PYG{n}{p2p\PYGZus{}started} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
    \PYG{k}{if}\PYG{p}{(}\PYG{o}{!}\PYG{n}{p2p\PYGZus{}started}\PYG{p}{)\PYGZob{}}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{esp\PYGZus{}mesh\PYGZus{}is\PYGZus{}root}\PYG{p}{())\PYGZob{}}\PYG{c+c1}{// root node}
            \PYG{n}{xTaskCreate}\PYG{p}{(}\PYG{n}{esp\PYGZus{}mesh\PYGZus{}rx}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}MPRX\PYGZdq{}}\PYG{p}{,} \PYG{l+m+mi}{3072}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}\PYG{c+c1}{// intermediate or leaf node}
            \PYG{n}{xTaskCreate}\PYG{p}{(}\PYG{n}{esp\PYGZus{}mesh\PYGZus{}tx}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}MPTX\PYGZdq{}}\PYG{p}{,} \PYG{l+m+mi}{3072}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{,} \PYG{l+m+mi}{5}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{mesh\PYGZus{}event\PYGZus{}handler}\PYG{p}{(}\PYG{n}{mesh\PYGZus{}event\PYGZus{}t} \PYG{n}{event}\PYG{p}{)\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{event}\PYG{p}{.}\PYG{n}{id} \PYG{o}{==} \PYG{n}{MESH\PYGZus{}EVENT\PYGZus{}PARENT\PYGZus{}CONNECTED}\PYG{p}{)\PYGZob{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{esp\PYGZus{}mesh\PYGZus{}is\PYGZus{}root}\PYG{p}{())} \PYG{p}{\PYGZob{}}
            \PYG{c+cm}{/* start DHCP server for the root node */}
            \PYG{n}{tcpip\PYGZus{}adapter\PYGZus{}dhcpc\PYGZus{}start}\PYG{p}{(}\PYG{n}{TCPIP\PYGZus{}ADAPTER\PYGZus{}IF\PYGZus{}STA}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}
        \PYG{n}{esp\PYGZus{}mesh\PYGZus{}comm\PYGZus{}p2p\PYGZus{}start}\PYG{p}{();}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
