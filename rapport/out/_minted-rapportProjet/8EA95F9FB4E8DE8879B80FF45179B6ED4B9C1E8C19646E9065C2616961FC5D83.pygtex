\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}define ESPNOW\PYGZus{}WIFI\PYGZus{}MODE WIFI\PYGZus{}MODE\PYGZus{}STA }\PYG{c+c1}{// Wi\PYGZhy{}Fi mode: sta, ap or sta+ap}
\PYG{c+cp}{\PYGZsh{}define ESPNOW\PYGZus{}WIFI\PYGZus{}IF ESP\PYGZus{}IF\PYGZus{}WIFI\PYGZus{}STA }\PYG{c+c1}{// Wi\PYGZhy{}Fi interface sta or ap}

\PYG{k}{static} \PYG{k}{const} \PYG{k+kt}{uint8\PYGZus{}t} \PYG{n}{broadcast\PYGZus{}addr}\PYG{p}{[}\PYG{n}{ESP\PYGZus{}NOW\PYGZus{}ETH\PYGZus{}ALEN}\PYG{p}{]} \PYG{o}{=}
    \PYG{p}{\PYGZob{}}\PYG{l+m+mh}{0xFF}\PYG{p}{,} \PYG{l+m+mh}{0xFF}\PYG{p}{,} \PYG{l+m+mh}{0xFF}\PYG{p}{,} \PYG{l+m+mh}{0xFF}\PYG{p}{,} \PYG{l+m+mh}{0xFF}\PYG{p}{,} \PYG{l+m+mh}{0xFF}\PYG{p}{\PYGZcb{};}

\PYG{k+kt}{void} \PYG{n+nf}{espnow\PYGZus{}recv\PYGZus{}cb}\PYG{p}{(}\PYG{k}{const} \PYG{k+kt}{uint8\PYGZus{}t} \PYG{o}{*}\PYG{n}{mac\PYGZus{}addr}\PYG{p}{,} \PYG{k}{const} \PYG{k+kt}{uint8\PYGZus{}t} \PYG{o}{*}\PYG{n}{data}\PYG{p}{,}
    \PYG{k+kt}{int} \PYG{n}{data\PYGZus{}len}\PYG{p}{)\PYGZob{}}
    \PYG{n}{ESP\PYGZus{}LOGI}\PYG{p}{(}\PYG{n}{TAG}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}receive \PYGZpc{}d bytes:\PYGZdq{}}\PYG{p}{,} \PYG{n}{data\PYGZus{}len}\PYG{p}{);}
    \PYG{n}{printArray}\PYG{p}{(}\PYG{n}{data}\PYG{p}{,} \PYG{n}{data\PYGZus{}len}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{esp\PYGZus{}now\PYGZus{}tx}\PYG{p}{(}\PYG{k+kt}{void} \PYG{o}{*}\PYG{n}{arg}\PYG{p}{)\PYGZob{}}
            \PYG{c+cm}{/* ... */}
    \PYG{c+cm}{/* create peer broadcast */}
    \PYG{n}{esp\PYGZus{}now\PYGZus{}peer\PYGZus{}info\PYGZus{}t} \PYG{n}{peer}\PYG{p}{;}
    \PYG{n}{peer}\PYG{p}{.}\PYG{n}{channel} \PYG{o}{=} \PYG{n}{CHANNEL}\PYG{p}{;}
    \PYG{n}{peer}\PYG{p}{.}\PYG{n}{ifidx} \PYG{o}{=} \PYG{n}{ESPNOW\PYGZus{}WIFI\PYGZus{}IF}\PYG{p}{;}
    \PYG{n}{peer}\PYG{p}{.}\PYG{n}{encrypt} \PYG{o}{=} \PYG{n+nb}{false}\PYG{p}{;}
    \PYG{n}{memcpy}\PYG{p}{(}\PYG{n}{peer}\PYG{p}{.}\PYG{n}{peer\PYGZus{}addr}\PYG{p}{,} \PYG{n}{broadcast\PYGZus{}addr}\PYG{p}{,} \PYG{n}{ESP\PYGZus{}NOW\PYGZus{}ETH\PYGZus{}ALEN}\PYG{p}{);}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}now\PYGZus{}add\PYGZus{}peer}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{peer}\PYG{p}{));} \PYG{c+c1}{// add peer}

    \PYG{n}{ESP\PYGZus{}LOGI}\PYG{p}{(}\PYG{n}{TAG}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}send to all nodes\PYGZdq{}}\PYG{p}{);}
    \PYG{k}{while}\PYG{p}{(}\PYG{n}{is\PYGZus{}running}\PYG{p}{)\PYGZob{}}
        \PYG{n}{esp\PYGZus{}now\PYGZus{}send}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{broadcast\PYGZus{}addr}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{data}\PYG{p}{,} \PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{data}\PYG{p}{));}
        \PYG{n}{vTaskDelay}\PYG{p}{(} \PYG{l+m+mi}{1000} \PYG{o}{/} \PYG{n}{portTICK\PYGZus{}PERIOD\PYGZus{}MS} \PYG{p}{);} \PYG{c+c1}{// delay the task}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{vTaskDelete}\PYG{p}{(}\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{app\PYGZus{}main}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)\PYGZob{}}
            \PYG{c+cm}{/* ... */}
    \PYG{c+cm}{/* Wi\PYGZhy{}Fi initialization */}
    \PYG{n}{wifi\PYGZus{}init\PYGZus{}config\PYGZus{}t} \PYG{n}{config} \PYG{o}{=} \PYG{n}{WIFI\PYGZus{}INIT\PYGZus{}CONFIG\PYGZus{}DEFAULT}\PYG{p}{();}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}wifi\PYGZus{}init}\PYG{p}{(}\PYG{o}{\PYGZam{}}\PYG{n}{config}\PYG{p}{));}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}wifi\PYGZus{}set\PYGZus{}mode}\PYG{p}{(}\PYG{n}{ESPNOW\PYGZus{}WIFI\PYGZus{}MODE}\PYG{p}{));}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}wifi\PYGZus{}start}\PYG{p}{());}

    \PYG{c+cm}{/* ESP\PYGZhy{}NOW initialization */}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}now\PYGZus{}init}\PYG{p}{());}
    \PYG{n}{ESP\PYGZus{}ERROR\PYGZus{}CHECK}\PYG{p}{(}\PYG{n}{esp\PYGZus{}now\PYGZus{}register\PYGZus{}recv\PYGZus{}cb}\PYG{p}{(}\PYG{n}{espnow\PYGZus{}recv\PYGZus{}cb}\PYG{p}{));}
            \PYG{c+cm}{/* ... */}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
